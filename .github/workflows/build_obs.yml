# This is a basic workflow to help you get started with Actions

name: Build and Draft Nightly Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # schedule:
  # - cron: "0 7 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow checks to see if branch has any changes since last wo
  prep:
    runs-on: ubuntu-latest
    name: Prepare for Build
    
    # outputs:
    #   oldversion: ${{ steps.previoustag.outputs.tag }}
    #   version: ${{ steps.semvers.outputs.patch }}

    steps:
      - uses: actions/checkout@v3
        with:
         fetch-depth: 0
        
      # - name: 'Check if nightly exists'
      #   id: nightly
      #   uses: cardinalby/git-get-release-action@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     tag: 'nightly'
      #     prerelease: true
      #     doNotFailIfNotFound: true
        
      # - name: 'Get Previous tag'
      #   id: previoustag
      #   run: |
      #     if [ "${{steps.nightly.outputs.id}}" == "" ]; then
      #       echo "::set-output name=tag::$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))"
      #     else
      #       echo "::set-output name=tag::$(echo ${{steps.nightly.outputs.name}} | perl -pe '($_)=/([0-9]+([.][0-9]+)+)/')"
      #     fi
        
      # - name: 'Get next version'
      #   id: semvers
      #   uses: "WyriHaximus/github-action-next-semvers@v1"
      #   with:
      #     version: ${{ steps.previoustag.outputs.tag }}
          
      # - name: output
      #   run: echo ${{steps.previoustag.outputs.tag}} ${{steps.semvers.outputs.patch}}
        
  build:
    needs: prep
    runs-on: windows-latest
    name: Build RePlays libobs
    
    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build LibObs
        run: .\\build-libobs.cmd
        shell: bash

      - name: Generate Prerelease
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "nightly"
          prerelease: true
          allowUpdates: true
          removeArtifacts: true
          generateReleaseNotes: true
          artifactErrorsFailBuild: true
          name: 'libobs RePlays'
          artifacts: |
            obs_build.zip